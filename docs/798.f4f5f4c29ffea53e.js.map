{"version":3,"file":"798.f4f5f4c29ffea53e.js","mappings":"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","names":["i0","LoginComponent","constructor","formBuilder","router","usuarioService","dialog","this","group","usuario","Validators","senha","onSubmit","user","username","formUsuario","get","value","password","login","subscribe","next","res","localStorage","setItem","JSON","stringify","token","id","navigate","error","err","open","DialogComponent","data","title","msg","errors","core","selectors","ctx","routes","path","redirectTo","pathMatch","component","CadastrarComponent","nome","email","sexo","dataNascimento","secondFormUsuario","firstFormUsuario","perfil","create","detail","AuthRoutingModule","RouterModule","AuthModule","CommonModule","SharedModule","FormsModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/cadastrar/cadastrar.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/cadastrar/cadastrar.component.ts","./src/app/auth/auth.module.ts"],"sourcesContent":["<div class=\"box\">\r\n\r\n  <mat-card>\r\n    <h1>Login</h1>\r\n    <mat-card-content>\r\n\r\n      <form [formGroup]=\"formUsuario\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"input-box\">\r\n          <ng-container *ngIf=\"formUsuario.get('usuario')?.touched\">\r\n            <span *ngIf=\"formUsuario.get('usuario')?.errors\">\r\n              * O campo usuário é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Usuário</mat-label>\r\n            <input matInput placeholder=\"Ex. ZéPequeno\" formControlName=\"usuario\">\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"formUsuario.get('senha')?.touched\">\r\n            <span *ngIf=\"formUsuario.get('senha')?.errors\">\r\n              * O campo senha é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Senha</mat-label>\r\n            <input type=\"password\" matInput formControlName=\"senha\">\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"buttons\">\r\n          <button [disabled]=\"formUsuario.invalid\"\r\n                  mat-raised-button color=\"primary\">\r\n                  Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n    </mat-card-content>\r\n    <span>Ainda não é usuário? <a routerLink=\"/auth/sign\">Clique aqui!</a></span>\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/core/entidades/usuario/usuario.service';\r\nimport { DialogComponent } from 'src/app/shared/material/dialog/dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  formUsuario: FormGroup = this.formBuilder.group({\r\n    usuario: ['', [Validators.required]],\r\n    senha: ['', [Validators.required]]\r\n  })\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private usuarioService: UsuarioService,\r\n    private dialog: MatDialog\r\n  ) {\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n    const user = {\r\n      username: this.formUsuario.get('usuario')?.value,\r\n      password: this.formUsuario.get('senha')?.value\r\n    };\r\n\r\n    this.usuarioService.login(user)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          localStorage.setItem(\"access_token\", JSON.stringify(res.token));\r\n          localStorage.setItem(\"user_id\", JSON.stringify(res.usuario.id));\r\n          localStorage.setItem('usuario', JSON.stringify(res.usuario));\r\n          this.router.navigate(['./']);\r\n        },\r\n        error: (err: any) => {\r\n          this.dialog.open(DialogComponent, {\r\n            data: {\r\n              title: 'Erro!',\r\n              msg: err.error.errors\r\n            }\r\n          })\r\n        }\r\n      });\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","<button routerLink=\"/auth\" class=\"back\" mat-icon-button>\r\n  <mat-icon>arrow_back</mat-icon>\r\n</button>\r\n<div class=\"box\">\r\n  <mat-stepper linear #stepper>\r\n    <mat-step [stepControl]=\"firstFormUsuario\">\r\n      <form [formGroup]=\"firstFormUsuario\">\r\n        <div class=\"inputs\">\r\n          <mat-form-field>\r\n            <mat-label>Usuário</mat-label>\r\n            <input matInput formControlName=\"usuario\" required>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('usuario')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('usuario')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo usuário é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Senha</mat-label>\r\n            <input type=\"password\" matInput formControlName=\"senha\" minlength=\"8\" required>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('senha')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('senha')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo senha é obrigatório e deve conter no mínimo 8 caracteres\r\n            </span>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"step-buttons\">\r\n          <button mat-raised-button matStepperNext [disabled]=\"firstFormUsuario.invalid\">Próximo</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormUsuario\">\r\n      <form [formGroup]=\"secondFormUsuario\">\r\n        <div class=\"inputs-second\">\r\n          <mat-form-field>\r\n            <mat-label>Nome</mat-label>\r\n            <input matInput formControlName=\"nome\" placeholder=\"Nome completo\" required>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('nome')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('nome')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo nome é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Email</mat-label>\r\n            <input type=\"email\" matInput formControlName=\"email\" placeholder=\"email@email.com\" required>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('email')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('email')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo email é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Sexo</mat-label>\r\n            <mat-select formControlName=\"sexo\">\r\n              <mat-option *ngFor=\"let genero of generos\" [value]=\"genero.toUpperCase()\">\r\n                {{ genero }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('sexo')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('sexo')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo nome é obrigatório\r\n            </span>\r\n          </ng-container>\r\n          <mat-form-field>\r\n            <mat-label>Data de nascimento</mat-label>\r\n            <input matInput [matDatepicker]=\"datepicker\" formControlName=\"dataNascimento\">\r\n            <mat-hint>MM/DD/YYYY</mat-hint>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #datepicker>\r\n              <mat-datepicker-actions>\r\n                <button mat-button matDatepickerCancel>Cancelar</button>\r\n                <button mat-raised-button color=\"primary\" matDatepickerApply>Aplicar</button>\r\n              </mat-datepicker-actions>\r\n            </mat-datepicker>\r\n          </mat-form-field>\r\n          <ng-container *ngIf=\"firstFormUsuario.get('dataNascimento')?.touched\">\r\n            <span *ngIf=\"firstFormUsuario.get('dataNascimento')?.errors\" style=\"-webkit-text-fill-color: red; margin-top: 0;\">\r\n              * O campo nome é obrigatório\r\n            </span>\r\n          </ng-container>\r\n        </div>\r\n        <div class=\"step-buttons\">\r\n          <button mat-button matStepperPrevious>Voltar</button>\r\n          <button mat-button matStepperNext (click)=\"onSubmit()\">Cadastrar</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step>\r\n      <div class=\"done\">\r\n        <h1>Bem vindo!</h1>\r\n        <div>\r\n          <button mat-button routerLink=\"/\">Continuar</button>\r\n        </div>\r\n      </div>\r\n    </mat-step>\r\n  </mat-stepper>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { CadastrarComponent } from './cadastrar/cadastrar.component';\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: 'login', pathMatch: 'full'\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'sign', component: CadastrarComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { UsuarioService } from 'src/app/core/entidades/usuario/usuario.service';\r\nimport { DialogComponent } from 'src/app/shared/material/dialog/dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-cadastrar',\r\n  templateUrl: './cadastrar.component.html',\r\n  styleUrls: ['./cadastrar.component.scss']\r\n})\r\nexport class CadastrarComponent {\r\n\r\n  firstFormUsuario: FormGroup = this.formBuilder.group({\r\n    usuario: ['', [Validators.required]],\r\n    senha: ['', [Validators.required]]\r\n  });\r\n\r\n  secondFormUsuario: FormGroup = this.formBuilder.group({\r\n    nome: ['', [Validators.required]],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    sexo: ['', [Validators.required]],\r\n    dataNascimento: ['', [Validators.required]]\r\n  });\r\n\r\n  generos: string[] = ['Masculino', 'Feminino', 'Outro'];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private usuarioService: UsuarioService,\r\n    private dialog: MatDialog,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    let dataNascimento: Date = this.secondFormUsuario.get('dataNascimento')?.value;\r\n\r\n    const user = {\r\n      usuario: this.firstFormUsuario.get('usuario')?.value,\r\n      senha: this.firstFormUsuario.get('senha')?.value,\r\n      nome: this.secondFormUsuario.get('nome')?.value,\r\n      email: this.secondFormUsuario.get('email')?.value,\r\n      sexo: this.secondFormUsuario.get('sexo')?.value,\r\n      dataNascimento: dataNascimento,\r\n      perfil: 'CLIENTE'\r\n    };\r\n\r\n    this.usuarioService.create(user)\r\n      .subscribe({\r\n        next: (res: any) => {\r\n          this.dialog.open(DialogComponent, {\r\n            data: {\r\n              title: 'Sucesso!',\r\n              msg: 'Usuário criado com sucesso!'\r\n            }\r\n          })\r\n        },\r\n        error: (err: any) => {\r\n          this.dialog.open(DialogComponent, {\r\n            data: {\r\n              title: 'Erro!',\r\n              msg: err.error.detail\r\n            }\r\n          })\r\n          this.router.navigate(['/auth/login']);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n"],"x_google_ignoreList":[]}